
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура РассчитатьСуммуСтроки(ТекущиеДанные)
	
	//--->Начало изменений Ильин М.А.(IL)- 27.08.2024 17:01:01
	//Описание изменений
	//расчет скидки по ТЧ документа
	//Код до изменения(IL):
	//
	//КоэффициентСкидки = 1 - ТекущиеДанные.Скидка / 100;
	//ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество * КоэффициентСкидки;
	//
	//Добавленный/Измененный код(IL):
	//
	ОбщаяСкидка = Объект.ил_СогласованнаяСкидка + ТекущиеДанные.Скидка;
	Если ОбщаяСкидка > 100 Тогда
		//@skip-check bsl-legacy-check-dynamic-feature-access
		//@skip-check use-non-recommended-method
		Сообщить("ВНИМАНИЕ по строке № " + СокрЛП(Строка(ТекущиеДанные.НомерСтроки)) + " Согласованная скидка и скидка по строке в сумме превышает 100%");
		Возврат;
	КонецЕсли;	
	ЦенаСоСкидкой       = ТекущиеДанные.Цена - ТекущиеДанные.Цена * (ОбщаяСкидка / 100); 
	ТекущиеДанные.Сумма = ЦенаСоСкидкой * ТекущиеДанные.Количество;
	//<---Конец изменений Ильин М.А.(IL) - 27.08.2024 17:01:20
	
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");
	
КонецПроцедуры

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти

//@skip-check module-structure-top-region
#Область ОБРАБОТКА_СОГЛАСОВАННЫХ_СКИДОК
//--->Начало изменений Ильин М.А.(IL)- 27.08.2024 16:39:56
//Описание изменений
//программная установка элемета формы и кнопки - обработчики
//
//Добавленный/Измененный код(IL):
//
&НаКлиенте
Процедура НепосредственныйПересчетСкидокВТЧДокумента()
	Для каждого ТекСтрока Из Объект.Товары Цикл
		РассчитатьСуммуСтроки(ТекСтрока)		
	КонецЦикла;	
	Для каждого ТекСтрока Из Объект.Услуги Цикл
		РассчитатьСуммуСтроки(ТекСтрока)		
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Асинх Процедура ПодтвердитьПересчетСкидкиВТЧ()
	Обещание = ВопросАсинх(НСтр("ru='Будем пересчитывать скидку на товары и услуги документа?'"), РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);	  
	Результат = Ждать Обещание;
	Если Результат = КодВозвратаДиалога.Да Тогда
		НепосредственныйПересчетСкидокВТЧДокумента();	
	Иначе
		Возврат;
	КонецЕсли;		  
КонецПроцедуры

//@skip-check module-unused-method
&НаКлиенте
Процедура СогласованнаяСкидкаПриИзменении(Элемент)
	Если Объект.Товары.Количество() ИЛИ Объект.Услуги.Количество() Тогда
		ПодтвердитьПересчетСкидкиВТЧ();
	КонецЕсли;	
КонецПроцедуры

//@skip-check module-unused-method
&НаКлиенте
Процедура КомандаПересчетСкидкиВТЧ(Команда)
	Если Объект.Товары.Количество() ИЛИ Объект.Услуги.Количество() Тогда
		ПодтвердитьПересчетСкидкиВТЧ();
	КонецЕсли;	
КонецПроцедуры
//<---Конец изменений Ильин М.А.(IL) - 27.08.2024 16:41:04
#КонецОбласти